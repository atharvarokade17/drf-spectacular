version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.4.1

jobs:
  generate-and-deploy-schema:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Install jq
          command: sudo apt-get update && sudo apt-get install -y jq
      - run:
          name: Generate Schema
          command: make dev
      - run:
          # This step now combines both uploading the file and restarting the Docker container
          name: Upload Schema and Start Swagger UI via SSM
          command: |
            # Base64 encode the file content to safely pass it as a string parameter
            FILE_CONTENT=$(base64 -w 0 schema.yaml)

            # Send a single command to the EC2 instance
            command_id=$(aws ssm send-command \
              --instance-ids "$EC2_INSTANCE_ID" \
              --document-name "AWS-RunShellScript" \
              --comment "Upload schema.yaml and start Swagger UI" \
              --parameters 'commands=[
                "set -e",
                "echo \"Creating directory...\"",
                "mkdir -p /home/ubuntu/swagger",
                "echo \"Writing schema.yaml file...\"",
                "echo '"$FILE_CONTENT"' | base64 -d > /home/ubuntu/swagger/schema.yaml",
                "echo \"Stopping and removing old swagger-ui container...\"",
                "docker rm -f swagger-ui || true",
                "echo \"Starting new swagger-ui container...\"",
                "docker run -d --restart always -p 8080:8080 \\",
                "  -e SWAGGER_JSON=/schema.yaml \\",
                "  -v /home/ubuntu/swagger/schema.yaml:/schema.yaml \\",
                "  --name swagger-ui \\",
                "  swaggerapi/swagger-ui",
                "echo \"Deployment command sent successfully.\""
              ]' \
              --region $AWS_REGION \
              --query 'Command.CommandId' --output text)

            echo "Command ID: $command_id"
            # Export the single command_id for the next step
            echo "export command_id=$command_id" >> $BASH_ENV
      - run:
          # This step now waits for the single combined command to finish
          name: Wait for command completion
          command: |
            echo "Waiting for SSM command to complete..."
            aws ssm wait command-executed \
              --command-id $command_id \
              --instance-id "$EC2_INSTANCE_ID" \
              --region $AWS_REGION

            echo "Retrieving command output..."
            ssm_output=$(aws ssm get-command-invocation \
              --command-id $command_id \
              --instance-id "$EC2_INSTANCE_ID" \
              --region $AWS_REGION)

            status=$(echo "$ssm_output" | jq -r '.Status')
            stdout=$(echo "$ssm_output" | jq -r '.StandardOutputContent')
            stderr=$(echo "$ssm_output" | jq -r '.StandardErrorContent')

            echo "SSM Command Status: $status"
            echo "--- Standard Output ---"
            echo "$stdout"
            echo "--- Standard Error ---"
            echo "$stderr"
            echo "-----------------------"

            if [ "$status" != "Success" ]; then
              echo "SSM command failed. Check the output above for details."
              exit 1
            fi
            echo "Swagger UI successfully deployed!"

workflows:
  version: 2
  deploy-swagger-ui:
    jobs:
      - generate-and-deploy-schema